--Rubén Álvarez Martín

with Ada.Text_IO;
with Ada.Strings.Unbounded;
with Ada.Command_Line;
with Word_List; 
with Ada.IO_Exceptions;
with Ada.Exceptions;


procedure Words is 
	package ASU renames Ada.Strings.Unbounded;
	package TI_A renames Ada.Text_IO;
	package ACL renames Ada.Command_Line;

	Lista_Palabras	: Word_List.Word_List_type;  		--Crea el puntero con el tipo del paquete Word_list 
	Usage_Error	: exception;
	
	
	File_Name		: ASU.Unbounded_String;
	File			: Ada.Text_IO.File_Type;
	Finish			: Boolean;
	Line			: ASU.Unbounded_String;
	Palabra			: ASu.Unbounded_String;

--
procedure Cortar(Line: in ASU_Unbounded_String 
		Lista_Palabras:out Word_List.Word_List_type) is 
	Numero: Integer;
	Close: Boolean := False; 
	begin 
		while not Close loop 
			Numbero:= ASU.Index(Line, " ");
			if Numero > 1 then
				Palabra:= ASU.Head(Line,Number-1);
				--Añadir a la lista la palabra aquí 
				Line:= ASU.Tail(Line, ASU.Lenght(Line)-Number);
			else if Numero = 1 then   	--Cuando lo siguiente que se encuentra es un espacio 
				Line:= ASU.Tail(Line, ASU.Lenght(Line)-1);
			else if Numero < 1 then 
				--If para cuando no tenga espacio

			end if;
			

		end loop;
				 

end Cortar; 


--Lee Fichero 
procedure Leer_Fichero(File_Name: in ASU_Unbounded_String)  is 

	begin 
		Ada.Text_IO.Open(File, Ada.Text_IO.In_File, ASU.To_String(File_Name));	
		while not Finish loop
			begin
				Line := ASU.To_Unbounded_String(Ada.Text_IO.Get_Line(File));
				--Ada.Text_IO.Put_Line(ASU.To_String(Line)); 	-- Trocear y contar en esta linea 
				exception
					when Ada.IO_Exceptions.End_Error =>
					Finish := True;
			end;
		end loop;
	Ada.Text_IO.Close(File);
end Leer_Fichero;


	begin 										--Lee el fichero 
		if ACL.Argument_Count < 1 and ACL.Argument_Count > 3 then
			raise Usage_Error;
		end if;
	
	
	if ACL.Argument_Count = 1 then 
		File_Name := ASU.To_Unbounded_String(ACL.Argument(1)); 
		Leer_Fichero(File_Name);
	elsif ACL.Argument_Count = 2 then 
		if ACL.Argument(1) = "-l" then 
		
		elsif ACL.Argument(1) = "-i" then

	elsif ACL.Argument_Count = 3 then 
	

	end if; 	
	
	exception 									--En caso de que no se meta un fichero valido 
		when Usage_Error =>
		Ada.Text_IO.Put_Line("Use: "); 
		Ada.Text_IO.Put_Line("    " & ACL.Command_Name & " <file>");

end Words;
